{"version":3,"file":"static/js/615.5cbaac5c.chunk.js","mappings":"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","sources":["pages/Contact.js"],"sourcesContent":["/**\n * Contact page component for the N-Impress website.\n *\n * This component provides a contact form for users to send messages to N-Impress,\n * along with business contact details. It includes form validation, error handling,\n * and responsive design for different screen sizes.\n *\n * Features:\n * - Contact form with name, email, and message fields\n * - Real-time form validation with error messages\n * - Business details section with address, phone, and email\n * - Responsive layout (side-by-side on desktop, stacked on mobile)\n * - Form submission handling with user feedback\n * - Theme-aware styling throughout\n */\nimport React, { useState, memo } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  color: ${props => props.theme.colors.text};\n  background-color: ${props => props.theme.colors.background};\n  padding-top: 80px; /* Account for fixed navbar */\n`;\n\nconst Header = styled.header`\n  text-align: center;\n  padding: 50px 20px;\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary} 0%, ${props => props.theme.colors.secondary} 100%);\n  color: white;\n  border-radius: 10px;\n  margin-bottom: 50px;\n\n  h1 {\n    font-size: 3rem;\n    margin-bottom: 20px;\n    font-weight: bold;\n  }\n\n  p {\n    font-size: 1.2rem;\n    max-width: 600px;\n    margin: 0 auto;\n  }\n\n  @media (max-width: 768px) {\n    padding: 30px 20px;\n    h1 {\n      font-size: 2rem;\n    }\n    p {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  margin-bottom: 50px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst FormSection = styled.section`\n  flex: 1;\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 20px;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border: 1px solid ${props => props.theme.colors.secondary};\n  border-radius: 5px;\n  font-size: 1rem;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Textarea = styled.textarea`\n  padding: 12px;\n  border: 1px solid ${props => props.theme.colors.secondary};\n  border-radius: 5px;\n  font-size: 1rem;\n  min-height: 120px;\n  resize: vertical;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  background-color: ${props => props.theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.secondary};\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n  font-size: 0.9rem;\n`;\n\nconst DetailsSection = styled.section`\n  flex: 1;\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 20px;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst DetailItem = styled.div`\n  margin-bottom: 20px;\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: 5px;\n    color: ${props => props.theme.colors.text};\n  }\n\n  p {\n    color: ${props => props.theme.colors.text};\n    opacity: 0.8;\n  }\n`;\n\n/**\n * Contact functional component.\n *\n * This component manages the contact page with a form for user inquiries and\n * displays business contact information. It handles form state, validation,\n * and submission with user feedback.\n *\n * State:\n * - formData: Object containing name, email, and message field values\n * - errors: Object containing validation error messages for each field\n *\n * Functions:\n * - handleChange: Updates form data and clears errors on input change\n * - validateForm: Performs client-side validation and returns validation status\n * - handleSubmit: Handles form submission, validation, and user feedback\n *\n * Form Validation:\n * - Name: Required field\n * - Email: Required field with regex validation for proper email format\n * - Message: Required field\n *\n * Submission:\n * Currently logs to console and shows alert. In production, this would\n * send data to a backend API for processing.\n */\nconst Contact = memo(() => {\n  // Form state management\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n\n  // Validation errors state\n  const [errors, setErrors] = useState({});\n\n  /**\n   * Handles input field changes.\n   * Updates the corresponding field in formData and clears any existing error\n   * for that field to provide immediate feedback as user types.\n   */\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  /**\n   * Validates the entire form.\n   * Checks for required fields and email format. Sets error messages\n   * and returns true if valid, false if invalid.\n   */\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.message.trim()) {\n      newErrors.message = 'Message is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  /**\n   * Handles form submission.\n   * Prevents default form behavior, validates form, and if valid,\n   * processes the submission (currently just logs and shows alert).\n   */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      console.log('Form submitted:', formData);\n      // Reset form after successful submission\n      setFormData({\n        name: '',\n        email: '',\n        message: ''\n      });\n      alert('Thank you for your message! We will get back to you soon.');\n    }\n  };\n\n  return (\n    <Container>\n      {/* Page header */}\n      <Header>\n        <h1>Contact Us</h1>\n        <p>Get in touch with N-Impress. We'd love to hear from you!</p>\n      </Header>\n\n      <ContentWrapper>\n        {/* Contact form section */}\n        <FormSection>\n          <h2>Send us a message</h2>\n          <Form onSubmit={handleSubmit}>\n            <div>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Your Name\"\n                value={formData.name}\n                onChange={handleChange}\n              />\n              {errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\n            </div>\n\n            <div>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Your Email\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n              {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n            </div>\n\n            <div>\n              <Textarea\n                name=\"message\"\n                placeholder=\"Your Message\"\n                value={formData.message}\n                onChange={handleChange}\n              />\n              {errors.message && <ErrorMessage>{errors.message}</ErrorMessage>}\n            </div>\n\n            <Button type=\"submit\">Send Message</Button>\n          </Form>\n        </FormSection>\n\n        {/* Business details section */}\n        <DetailsSection>\n          <h2>Business Details</h2>\n          <DetailItem>\n            <h3>Address</h3>\n            <p>123 Main Street<br />Santo Domingo<br />Dominican Republic</p>\n          </DetailItem>\n          <DetailItem>\n            <h3>Phone</h3>\n            <p>+1 (809) 123-4567</p>\n          </DetailItem>\n          <DetailItem>\n            <h3>Email</h3>\n            <p>info@n-impress.com</p>\n          </DetailItem>\n        </DetailsSection>\n      </ContentWrapper>\n    </Container>\n  );\n});\n\n// Memoize the component to prevent unnecessary re-renders\nexport default Contact;"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","colors","text","background","Header","header","_templateObject2","primary","secondary","ContentWrapper","_templateObject3","FormSection","section","_templateObject4","Form","form","_templateObject5","Input","input","_templateObject6","Textarea","textarea","_templateObject7","Button","button","_templateObject8","ErrorMessage","span","_templateObject9","DetailsSection","_templateObject0","DetailItem","_templateObject1","memo","formData","setFormData","useState","name","email","message","errors","setErrors","handleChange","e","value","target","prev","_objectSpread","_jsxs","children","_jsx","onSubmit","preventDefault","validateForm","newErrors","trim","test","Object","keys","length","console","log","alert","type","placeholder","onChange"],"sourceRoot":""}